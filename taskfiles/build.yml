version: '3'

dir: .

tasks:
  uv:
    desc: Install uv and uvx
    cmds:
      - |
        echo "PWD: $PWD"
        # install uv and uvx
        if [ -f "./bin/uv" ] && [ -x "./bin/uv" ]; then
          printf "{{.BLUE}}[INFO] uv already present in ./bin, skipping installation{{.RESET}}\n"
        else
          printf "{{.BLUE}}Installing uv{{.RESET}}\n"
          curl -LsSf https://astral.sh/uv/install.sh | UV_INSTALL_DIR="./bin" sh || { printf "{{.RED}}[ERROR] Failed to install uv{{.RESET}}\n"; exit 1; }
        fi

  install:
    desc: Install all dependencies using uv
    deps: [uv]
    cmds:
      - |
        # Check if .venv folder already exists
        if [ -d ".venv" ]; then
          printf "${BLUE}[INFO] Virtual environment already exists, skipping installation${RESET}\n"
        else
          # we need the virtual environment at least for the tests to work
          # even if we don't install anything

          # Create the virtual environment
          printf "${BLUE}[INFO] Creating virtual environment...${RESET}\n"

          # Create the virtual environment
          ./bin/uv venv --python 3.12 || { printf "${RED}[ERROR] Failed to create virtual environment${RESET}\n"; exit 1; }

          if [ -f "pyproject.toml" ]; then
            printf "${BLUE}[INFO] Installing dependencies${RESET}\n"
            ./bin/uv sync --all-extras --frozen || { printf "${RED}[ERROR] Failed to install dependencies${RESET}\n"; exit 1; }
          else
            printf "${YELLOW}[WARN] No pyproject.toml found, skipping install${RESET}\n"
          fi
        fi

  build:
    desc: Build the package using hatch
    deps: [install]
    cmds:
      - |
        if [ -f "pyproject.toml" ]; then
          printf "${BLUE}[INFO] Building package...${RESET}\n"
          ./bin/uv pip install hatch
          ./bin/uv run hatch build
        else
          printf "${YELLOW}[WARN] No pyproject.toml found, skipping build${RESET}\n"
        fi
